{"0": {
    "doc": "Testing Kernels and Datastructures",
    "title": "Implemented Kernel Functions",
    "content": ". | 2D Cubic Spline Kernel for \\(\\kappa = 2h,\\, \\alpha = \\frac{5}{14 \\pi h^2}, \\, r=\\lVert\\mathbf{\\vec{x}}_{ij}\\rVert, \\, q=\\frac{r}{h}\\) : . \\[W_{\\text{spline}}(\\mathbf{\\vec{x}}_{ij}) := \\alpha \\begin{cases} (2-q)^3 - 4(1-q)^3&amp; 0 \\leq q &lt; 1\\\\ (2-q)^3 &amp; 1 \\leq q &lt; 2\\\\ 0 &amp; q \\ge 2 \\end{cases}\\] \\[\\nabla W_{\\text{spline}}(\\mathbf{\\vec{x}}_{ij}) := \\alpha \\frac{\\mathbf{\\vec{x}}_{ij}}{\\lVert\\mathbf{\\vec{x}}_{ij}\\rVert h}\\begin{cases} -3(2-q)^2 +12 (1-q)^2&amp; 0 \\leq q &lt; 1\\\\ -3(2-q)^2 &amp; 1 \\leq q &lt; 2\\\\ 0 &amp; q \\ge 2 \\end{cases}\\] . | Boundary penetration | Vanishing gradients as \\(r\\to 0\\) problematic for pressure computation? | . | 2D Spiky Kernel suggested by Müller, Charypar, Gross after Desbrun, Cani normalized for 2D for \\(\\kappa = 2h,\\, \\alpha = -\\frac{10}{\\pi\\kappa^5}, \\, r=\\lVert\\mathbf{\\vec{x}}_{ij}\\rVert\\) : . \\[W_{\\text{spiky}}(\\mathbf{\\vec{x}}_{ij}) := \\alpha \\frac{\\mathbf{\\vec{x}}_{ij}}{\\lVert\\mathbf{\\vec{x}}_{ij}\\rVert}\\begin{cases} (\\kappa-r)^3&amp; 0 \\leq r \\leq \\kappa\\\\ 0 &amp; \\text{otherwise} \\end{cases}\\] \\[\\nabla W_{\\text{spiky}}(\\mathbf{\\vec{x}}_{ij}) := \\alpha \\frac{\\mathbf{\\vec{x}}_{ij}}{\\lVert\\mathbf{\\vec{x}}_{ij}\\rVert}\\begin{cases} (\\kappa-r)^2&amp; 0 &lt; r \\leq \\kappa\\\\ 0 &amp; \\text{otherwise} \\end{cases}\\] . | Much better incompressibility, when gradient is used no boundary penetration! | Unrealistic viscous behaviour? | . | 2D Double Cosine Kernel proposed by [Yang, Peng,Liu] for \\(\\kappa = 2h,\\, \\alpha = \\frac{\\pi}{(3\\pi^2-16)(\\kappa)^2}, \\, r=\\lVert\\mathbf{\\vec{x}}_{ij}\\rVert, \\, s=\\frac{r}{h}\\): . \\[W_{\\text{cos}}(\\mathbf{\\vec{x}}_{ij}) := \\alpha \\begin{cases} 4\\cos(\\frac{\\pi}{2}s)+\\cos(\\pi s)+3&amp; 0 \\leq s \\leq 2\\\\ 0 &amp; \\text{otherwise} \\end{cases}\\] \\[\\nabla W_{\\text{cos}}(\\mathbf{\\vec{x}}_{ij}) := \\alpha \\frac{\\mathbf{\\vec{x}}_{ij}}{\\lVert\\mathbf{\\vec{x}}_{ij}\\rVert}\\begin{cases} -2\\frac{\\tau}{\\kappa}\\sin(\\frac{\\pi}{2}s)-\\frac{\\tau}{\\kappa}\\sin(\\pi s)&amp; 0 \\leq s \\leq 2\\\\ 0 &amp; \\text{otherwise} \\end{cases}\\] | . ",
    "url": "/stoked2d/week1a/#implemented-kernel-functions",
    
    "relUrl": "/week1a/#implemented-kernel-functions"
  },"1": {
    "doc": "Testing Kernels and Datastructures",
    "title": "Kernel Function Plots",
    "content": "Kernel Functions for \\(\\kappa = 2h,\\, h=1\\) . | Surprisingly equal integral? Projection to 1D may be at fault, outer regions weigh quadratically more in 2D integral | . Magnitude of Kernel Gradient over \\(\\mathbf{\\vec{x}}_{ij}\\) for Cubic Spline and Spiky Kernel: . ",
    "url": "/stoked2d/week1a/#kernel-function-plots",
    
    "relUrl": "/week1a/#kernel-function-plots"
  },"2": {
    "doc": "Testing Kernels and Datastructures",
    "title": "Testing the Kernel Function",
    "content": ". | Kernel properties are tested . | Integrals are implemented with Monte Carlo, \\(N=10^{8}\\) on \\(\\Omega=[-2.1h; 2.1h]\\) | Accepted error is \\(\\epsilon = 10^{-3}\\) | They are checked again with Riemann sums of \\(n=10^4,\\, \\epsilon=10^{-9}\\) | All other tests are run \\(N\\) times with random \\(\\mathbf{\\vec{x_i}, \\vec{x_j}}\\) | . \\[\\begin{align} &amp;W(\\lVert \\mathbf{\\vec{x_i} - \\vec{x_j}} \\rVert, \\kappa) &gt; 0&amp;&amp; \\text{Positivity}\\\\ \\forall r&gt;\\kappa:\\quad &amp;W(r, \\kappa) = 0,\\quad \\nabla W(r, \\kappa) = 0&amp;&amp;\\text{Compact support}\\\\ &amp;W_{ij} = W_{ji}&amp;&amp; \\text{Symmetry}\\\\ &amp;\\nabla W_{ij} = \\nabla W_{ji} &amp;&amp;\\text{Gradient Antisymmetry}\\\\ \\int_{\\mathbf{x_j}\\in[-\\kappa;\\kappa]^2}&amp;W(\\lVert \\mathbf{\\vec{0} - \\vec{x_j}} \\rVert, \\kappa)\\,dV = 1&amp;&amp;\\text{Kernel Integral}\\\\ \\int_{\\mathbf{x_j}\\in[-\\kappa;\\kappa]^2}&amp;\\nabla W(\\lVert \\mathbf{\\vec{0} - \\vec{x_j}} \\rVert, \\kappa)\\,dV = \\mathbf{\\vec{0}}&amp;&amp;\\text{Kernel Gradient Integral}\\\\ &amp;\\nabla W_{ii} = 0 &amp;&amp;\\text{Kernel Gradient at Zero is Zero}\\\\ \\end{align}\\] | For ideal sampling, where \\(\\kappa = 2h\\), \\(h\\) is the particle spacing a regular grid is used: . \\[\\begin{align} \\int_{\\mathbf{x_j}\\in[-\\kappa;\\kappa]^2}&amp;W(\\lVert \\mathbf{\\vec{0} - \\vec{x_j}} \\rVert, \\kappa) = \\frac{1}{h^2}&amp;&amp;\\text{Integral is Density}\\\\ \\int_{\\mathbf{x_j}\\in[-\\kappa;\\kappa]^2}&amp;\\nabla W(\\lVert \\mathbf{\\vec{0} - \\vec{x_j}} \\rVert, \\kappa) = \\mathbf{\\vec{0}}&amp;&amp;\\text{Gradient Integral is Zero}\\\\ \\sum_j &amp;\\left(\\mathbf{(\\vec{x}_i - \\vec{x}_j)} \\odot \\nabla W_{ij} \\right) = -\\frac{1}{V} \\cdot \\mathbf{\\vec{1}}&amp;&amp;\\text{Density from Gradient} \\end{align}\\] | On a \\(100\\times 100\\) regular grid and a random grid, the consistency of each \\(\\nabla W\\) is tested by comparing to a \\(\\mathcal{O}(\\Delta x^4)\\) central difference of \\(W\\) with an accepted error of \\(1\\%\\) . | ❌ this fails for Cubic Spline for small \\(h\\) - numerical problem at discontinuity? | ❌ always fails for Spiky kernel - smoothness too low? | ✅ always passes for Double Cosine kernel | . | . ",
    "url": "/stoked2d/week1a/#testing-the-kernel-function",
    
    "relUrl": "/week1a/#testing-the-kernel-function"
  },"3": {
    "doc": "Testing Kernels and Datastructures",
    "title": "Failed Tests",
    "content": "❌ Ideal Sampling: \\(\\sum_j \\left(\\mathbf{(\\vec{x}_i - \\vec{x}_j)} \\odot \\nabla W_{ij} \\right) = -\\frac{1}{V} \\cdot \\mathbf{\\vec{1}}\\) always fails . | Kernel | Failed Tests | . | Cubic Spline ❓ | \\(W\\) and \\(\\nabla W\\): consistency with finite difference? | . | Spiky Kernel ❌ | Ideal Sampling: \\(\\int_{\\mathbf{x_j}\\in[-\\kappa;\\kappa]^2}W(\\lVert \\mathbf{\\vec{0} - \\vec{x_j}} \\rVert, \\kappa) = \\frac{1}{h^2}\\) off by +27.36% | . | Double Cosine ✅ | None | . ",
    "url": "/stoked2d/week1a/#failed-tests",
    
    "relUrl": "/week1a/#failed-tests"
  },"4": {
    "doc": "Testing Kernels and Datastructures",
    "title": "Improving the Acceleration Datatructure",
    "content": "+400 FPS@N=4k / +60% . | Filter by \\(\\lVert \\mathbf{\\vec{x_i} - \\vec{x_j}} \\rVert \\le \\kappa\\) when building neighbour lists instead of saving supersets with all particles in neighbouring grid cells. ~15%@N=4k | Binary search directly in particle handles, don’t build a compact list of filled cells like suggested in Compressed Neighbor Lists for SPH (???). ~30%@N=4k | Use an XYZ curve that is faster to compute than a Morton Code (?) ~15%@N=4k | . ",
    "url": "/stoked2d/week1a/#improving-the-acceleration-datatructure",
    
    "relUrl": "/week1a/#improving-the-acceleration-datatructure"
  },"5": {
    "doc": "Testing Kernels and Datastructures",
    "title": "Testing the Acceleration Datatructure",
    "content": "For \\(\\kappa \\in [0.9, 1.0, 1.1], \\, N=5000\\) particles are randomly distributed in \\([-10;10]\\) and the neighbour sets for each compared to the ones computed per brute force in \\(\\mathcal{O}(n^2)\\). This is repeated 10 times. ✅ . ",
    "url": "/stoked2d/week1a/#testing-the-acceleration-datatructure",
    
    "relUrl": "/week1a/#testing-the-acceleration-datatructure"
  },"6": {
    "doc": "Testing Kernels and Datastructures",
    "title": "Questions",
    "content": ". | What does \\(\\sum_j \\left(\\mathbf{(\\vec{x}_i - \\vec{x}_j)} \\odot \\nabla W_{ij} \\right) = -\\frac{1}{V} \\cdot \\mathbf{\\vec{1}}\\) actually mean? Why does it always fail for ideal sampling? | Why did the test for the spiky kernel fail? | Why do the stable parameters differ so wildly from kernel to kernel? | Why did not producing a compact filled cell list improve neighbour search performance? (size of the system?) | . ",
    "url": "/stoked2d/week1a/#questions",
    
    "relUrl": "/week1a/#questions"
  },"7": {
    "doc": "Testing Kernels and Datastructures",
    "title": "Testing Kernels and Datastructures",
    "content": " ",
    "url": "/stoked2d/week1a/",
    
    "relUrl": "/week1a/"
  },"8": {
    "doc": "Boundary Handling",
    "title": "Towards a single non-uniform layer",
    "content": " ",
    "url": "/stoked2d/week1b/#towards-a-single-non-uniform-layer",
    
    "relUrl": "/week1b/#towards-a-single-non-uniform-layer"
  },"9": {
    "doc": "Boundary Handling",
    "title": "Boundary Handling",
    "content": " ",
    "url": "/stoked2d/week1b/",
    
    "relUrl": "/week1b/"
  }
}
